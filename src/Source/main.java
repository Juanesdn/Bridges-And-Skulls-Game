/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Source;

import java.awt.event.KeyEvent;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;



/**
 *
 * @author Juanes
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    
    int BridgeSize = 0;
    int BridgePosition = 0;
    int BridgeX = 0;
    int BridgeY = 0;
    int frameSize;
    Random rand = new Random();
    Timer timer = new Timer();
    

    public main() {
        initComponents();
        frameSize = 520 - Terrain.getY(); // Tama単o maximo del puente
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Bridge = new javax.swing.JLabel();
        Terrain = new javax.swing.JLabel();
        Terrain2 = new javax.swing.JLabel();
        character = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Bridge.setBackground(new java.awt.Color(0, 0, 0));
        Bridge.setOpaque(true);
        getContentPane().add(Bridge, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, 10, 0));

        Terrain.setBackground(new java.awt.Color(0, 204, 51));
        Terrain.setOpaque(true);
        getContentPane().add(Terrain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 100, 130));

        Terrain2.setBackground(new java.awt.Color(0, 204, 51));
        Terrain2.setOpaque(true);
        getContentPane().add(Terrain2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 270, 100, 130));

        character.setBackground(new java.awt.Color(51, 51, 255));
        character.setOpaque(true);
        getContentPane().add(character, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 30, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        // Si la tecla undida es la barra espaciadora el puente aumenta su tama単o
        if (evt.getKeyCode() == KeyEvent.VK_SPACE){
            if (BridgeSize <= frameSize) // Si el tama単o del puente es menor 
                IncreaseBridge();
                
        }
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_SPACE){
            DropBridge();
            MoveCharacter();
        }
    }//GEN-LAST:event_formKeyReleased

    
    void IncreaseBridge(){
        /**
         * Aumenta el tama単o del puente 
         */
        Bridge.setSize(Bridge.getWidth(), BridgeSize);
        Bridge.setLocation(Bridge.getX(), Terrain.getY()+BridgePosition);
        BridgeSize += 10;
        BridgePosition -= 10;
    }
    
    void DropBridge(){
        /**
         * Tumba el puente
         */
        Bridge.setSize(Bridge.getWidth()+BridgeSize, 10);
        Bridge.setLocation(Bridge.getX(), Terrain.getY());
        System.out.println("Dropping Bridge");
    }
    
    void MovePlatform(){
        /**
         * Mueve la plataforma
         */
        Terrain2.setLocation(Terrain.getWidth() + rand.nextInt(300), Terrain2.getY());
    }
    
    void MoveCharacter(){
        /**
         * Mueve al personaje
         */
        
        // Creo un timer que mueve el label cada 15ms
        TimerTask task = new TimerTask(){
            public void run(){
                int charPosition = character.getX(); 
                System.out.println("character position: "+ charPosition);
                System.out.println("Bridge Size: " + BridgeSize);
                System.out.println("Difference characterpos and terrain: " + (Terrain.getX() - character.getX()));
                if (charPosition <= BridgeSize + (character.getX() - Terrain.getX())) {                    
                    System.out.println("moving...");
                    character.setLocation(character.getX()+1, character.getLocation().y);
                }
                
            }
        };
        timer.scheduleAtFixedRate(task, 0, 15); // 1000ms = 1 segundo
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Bridge;
    private javax.swing.JLabel Terrain;
    private javax.swing.JLabel Terrain2;
    private javax.swing.JLabel character;
    // End of variables declaration//GEN-END:variables
}
